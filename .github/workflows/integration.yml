name: "Continuous Integration"

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        php: ['7.3', '7.4', '8.0']
        experimental: [false]
        composeroptions: ['']
        include:
          - php: 8.1
            experimental: true
            composeroptions: --ignore-platform-req=php

    name: Build captainhook on ${{ matrix.php }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    env:
      PHAR: build/phar/captainhook.phar

    steps:
    - uses: actions/checkout@master

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: composer:v2
        extensions: mbstring

    - name: PHP Version
      run: php -v

    - name: Update composer
      run: composer self-update

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest ${{ matrix.composeroptions }}

    - name: Install tooling
      run: GITHUB_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }} tools/phive --no-progress --home ./.phive install --force-accept-unsigned --trust-gpg-keys 4AA394086372C20A,31C7E470E2138192,8E730BA25823D8B5,CF1A108D0E7AE720

    - name: Execute unit tests
      run: tools/phpunit --no-coverage --testsuite UnitTests

    - name: Execute integration tests
      run: tools/phpunit --no-coverage --testsuite IntegrationTests

    - name: Check coding style
      run: tools/phpcs --standard=psr12 src tests

    - name: Static code analysis
      run: tools/phpstan analyse

    - name: Force install Symfony 3
      run: composer require symfony/console ^3.0 symfony/process ^3.0 symfony/filesystem ^3.0

    - name: Validate configuration for humbug/box
      run: tools/box validate box.json

    - name: Compile phar with humbug/box
      run: tools/box compile

    - name: Show info about generated phar with humbug/box
      run: tools/box info ${{ env.PHAR }}

    - name: Run phar
      run: ${{ env.PHAR }} --help
